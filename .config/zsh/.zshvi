# Vi Mode Settings

# Keybindings
bindkey -v
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
autoload -Uz edit-command-line
zle -N edit-command-line # Autoload this function ^
bindkey '^n' edit-command-line # Edit line with ctrl-n in insert mode
bindkey -M vicmd n edit-command-line # Edit line with n in normal mode

# Change cursor shape and prompt for different vi modes.
cursor_shape () {
    function zle-keymap-select () {
        case $KEYMAP in
            vicmd) echo -ne '\e[1 q';; # Block, because vicmd implies it's in command mode
            viins|main) echo -ne '\e[5 q';; # Beam, because viins implies it's in insert mode
        esac
        vi_mode="${${KEYMAP/vicmd/${vi_cmd_mode}}/(main|viins)/${vi_ins_mode}}"
        zle reset-prompt
    }
    zle -N zle-keymap-select

    function zle-line-init() {
        echo -ne "\e[5 q"
    }
    zle -N zle-line-init # Initial state of the shell when you open it. It's in insert mode, with the Beam cursor
    preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

    function TRAPINT() {
        vi_mode=$vi_ins_mode
        return $(( 128 + $1 ))
    }

    vi_ins_mode=" "
    vi_cmd_mode="%{$fg[green]%}î˜« %{$reset_color%}"
    vi_mode=$vi_ins_mode
}
